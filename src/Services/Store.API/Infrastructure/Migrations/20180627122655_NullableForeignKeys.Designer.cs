// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Store.API.Infrastructure.DataAccess;

namespace Store.API.Infrastructure.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20180627122655_NullableForeignKeys")]
    partial class NullableForeignKeys
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.catalog_artist_hilo", "'catalog_artist_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.catalog_hilo", "'catalog_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.genre_hilo", "'genre_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Store.API.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "genre_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsDisabled");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("StoreGenre");
                });

            modelBuilder.Entity("Store.API.Models.StoreArtist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalog_artist_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Description");

                    b.Property<int?>("GenreId");

                    b.Property<bool>("IsDisabled");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("StoreArtist");
                });

            modelBuilder.Entity("Store.API.Models.StoreViynl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalog_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int?>("ArtistId")
                        .IsRequired();

                    b.Property<int>("AvailableStock");

                    b.Property<int?>("GenreId");

                    b.Property<bool>("IsDisabled");

                    b.Property<int?>("StoreArtistId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.HasIndex("StoreArtistId");

                    b.ToTable("StoreTrack");
                });

            modelBuilder.Entity("Store.API.Models.StoreArtist", b =>
                {
                    b.HasOne("Store.API.Models.Genre")
                        .WithMany("Vinyls")
                        .HasForeignKey("GenreId");
                });

            modelBuilder.Entity("Store.API.Models.StoreViynl", b =>
                {
                    b.HasOne("Store.API.Models.StoreArtist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Store.API.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId");

                    b.HasOne("Store.API.Models.StoreArtist")
                        .WithMany("Vinyls")
                        .HasForeignKey("StoreArtistId");
                });
#pragma warning restore 612, 618
        }
    }
}
